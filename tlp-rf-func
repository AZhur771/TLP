#!/bin/sh
# tlp - rf switch functions

# ----------------------------------------------------------------------------
# Definitions
RFKILL="/sbin/rfkill"

# ----------------------------------------------------------------------------
# Functions
get_ctrl_device () { # $1: rftype; retval $devc
	local i
	
	check_sysfs "get_ctrl_device" "/sys/class/rfkill"
	
	case $1 in
		wwan|bluetooth)
			for i in /sys/class/rfkill/rfkill* ; do
				if [ -f $i/type  ] && [ "$(cat $i/type)" = "$1" ]; then 
					devc="$i/state"
					echo_debug "rf" "get_ctrl_device($1) = $devc"
					return
				fi
			done
			devc=""
			;;

		wifi)
			for i in /sys/class/rfkill/rfkill* ; do
				if [ -f $i/type  ] && [ "$(cat $i/type)" = "wlan" ]; then 
					devc="$i/state"
					echo_debug "rf" "get_ctrl_device($1) = $devc"
					return
				fi
			done
			devc=""
			;;
        
        *)
			echo "Error: no such device \"$1\"" 1>&2
			devc=""
			echo_debug "rf" "get_ctrl_device($1) = none"
			;;
	esac
	
	return 0
}

check2200 () { # $1: rftype; retval $devc, $is2200
	local i
	
	is2200="0"
	if [ $1 = "wifi" ]; then
		devc=""
		if [ -d /sys/bus/pci/drivers/ipw2200 ]; then
			for i in /sys/bus/pci/drivers/ipw2200/*/rf_kill ; do
				[ -f $i ] && devc=$i
			done
			[ -n "$devc" ] && is2200="1"
		fi
	fi
	echo_debug "rf" "check2200($1) = $is2200 $devc"
	
	return 0
}

err_no_root_priv () { 
	echo "Error: root privilege needed. Please call me with sudo." 1>&2
	
	return 0
}

device_state () { # $1: rftype; retval $devs: 0=off/1=on
	devs=254
	check2200 $1
	if [ "$is2200" = "1" ]; then
		if [ -n "$devc" ]; then
			devs=$(cat $devc)
			devs=$((! $devs))
		fi
	else 
		get_ctrl_device $1	
		if [ -n "$devc" ]; then
			devs=$(cat $devc)
		fi
	fi
	
	echo_debug "rf" "device_state($1) = $devs"
	
	return 0
}

device_on () { # $1: rftype 
	echo_debug "rf" "device_on($1)"
	device_state $1
	
	if [ "$is2200" = "1" ]; then
		if [ "$(id -u)" = "0" ]; then
			if [ -n "$devc" ]; then
				echo_debug "rf" "device_on($1).ipw2200"
				echo -n 0 > $devc
			fi
		else
			err_no_root_priv
		fi
	elif [ -x $RFKILL ]; then
		echo_debug "rf" "device_on($1).rfkill"
		$RFKILL unblock $1
	else
		if [ "$(id -u)" = "0" ]; then
			if [ -n "$devc" ]; then
				echo_debug "rf" "device_on($1).devc"
				echo -n 1 > $devc
			fi
		else
			err_no_root_priv
		fi
	fi
	
	return 0
}

device_off () { # $1: rftype
	echo_debug "rf" "device_off($1)"
	device_state $1
	
	if [ "$is2200" = "1" ]; then
		if [ "$(id -u)" = "0" ]; then
			if [ -n "$devc" ]; then
				echo_debug "rf" "device_off($1).ipw2200"
				echo -n 1 > $devc
			fi
		else
			err_no_root_priv
		fi
	elif [ -x $RFKILL ]; then
		echo_debug "rf" "device_off($1).rfkill"

        ## DEBUG 
        if patinstr "rf" "$TLP_DEBUG"; then
            local rfout rfrc
            rfout=$($RFKILL block $1 2>&1)
            rfrc=$?
            $LOGGER -p debug -t "tlp[$$,$PPID]" "*** rfkill: rc=$rfrc out=\"$rfout\"" 
            $LOGGER -p debug -t "tlp[$$,$PPID]" "*** $devc=$(cat $devc)"            
        else
            $RFKILL block $1
        fi
	else
		if [ "$(id -u)" = "0" ]; then
			if [ -n "$devc" ]; then
				echo_debug "rf" "device_off($1).devc"
				echo -n 0 > $devc
			fi
		else
			err_no_root_priv
		fi
	fi
	
	return 0
}

device_toggle () { # $1: rftype
	echo_debug "rf" "device_toggle($1)"
	device_state $1
			
	if [ "$is2200" = "1" ]; then
		if [ "$(id -u)" = "0" ]; then
			if [ -n "$devc" ]; then
				echo_debug "rf" "device_toggle($1).ipw2200"
				case $devs in
					0) echo -n 0 > $devc ;;
					1) echo -n 1 > $devc ;;
					*) ;;
				esac
			fi
		else
			err_no_root_priv
		fi
	elif [ -x $RFKILL ]; then
		echo_debug "rf" "device_toggle($1).rfkill"
		case $devs in
			0) $RFKILL unblock $1 ;;
			1) $RFKILL block $1   ;;				
			*) ;;
		esac
	else
		if [ "$(id -u)" = "0" ]; then
			if [ -n "$devc" ]; then
				echo_debug "rf" "device_toggle($1).devc"
				case $devs in
					0) echo -n 1 > $devc ;;
					1) echo -n 0 > $devc ;;
					*) ;;
				esac
			fi
		else
			err_no_root_priv
		fi
	fi
	
	return 0
}

echo_device_state () { # $1: rftype
	device_state $1
		
	case $1 in
		bluetooth)
			devstr="bluetooth"
			;;
			
		wifi)
			devstr="wifi     "
			;;
		
		wwan)
			devstr="wwan     "
			;;
			
		*)
			devstr=$1
			;;
	esac
	
	case $devs in
		0) 
			echo "$devstr = off (software)"
			;;

		1) 
			echo "$devstr = on"
			;;
            
		2) 
			echo "$devstr = off (hardware)"
			;;
			
		254) 
			echo "$devstr = none (no device)"
			;;

		*)
            echo "$devstr = unknown state \"$state\""
	esac
	
	return 0
}

